# OASIS_START
# DO NOT EDIT (digest: 352b89ede1144e92a1c0ce3d8eb8eb1b)
version = "0.1.0"
description = "A session manager for your everyday needs"
requires = "nocrypto result"
archive(byte) = "session.cma"
archive(byte, plugin) = "session.cma"
archive(native) = "session.cmxa"
archive(native, plugin) = "session.cmxs"
exists_if = "session.cma"
package "webmachine" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "webmachine result session.cohttp"
 archive(byte) = "session_webmachine.cma"
 archive(byte, plugin) = "session_webmachine.cma"
 archive(native) = "session_webmachine.cmxa"
 archive(native, plugin) = "session_webmachine.cmxs"
 exists_if = "session_webmachine.cma"
)

package "postgresql-lwt" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "lwt postgresql result session.postgresql threads"
 archive(byte) = "session_postgresql_lwt.cma"
 archive(byte, plugin) = "session_postgresql_lwt.cma"
 archive(native) = "session_postgresql_lwt.cmxa"
 archive(native, plugin) = "session_postgresql_lwt.cmxs"
 exists_if = "session_postgresql_lwt.cma"
)

package "postgresql-async" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "async postgresql result session.postgresql threads"
 archive(byte) = "session_postgresql_async.cma"
 archive(byte, plugin) = "session_postgresql_async.cma"
 archive(native) = "session_postgresql_async.cmxa"
 archive(native, plugin) = "session_postgresql_async.cmxs"
 exists_if = "session_postgresql_async.cma"
)

package "postgresql" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "nocrypto postgresql result session threads"
 archive(byte) = "session_postgresql.cma"
 archive(byte, plugin) = "session_postgresql.cma"
 archive(native) = "session_postgresql.cmxa"
 archive(native, plugin) = "session_postgresql.cmxs"
 exists_if = "session_postgresql.cma"
)

package "cohttp-lwt" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "cohttp.lwt lwt result session.cohttp"
 archive(byte) = "session_cohttp_lwt.cma"
 archive(byte, plugin) = "session_cohttp_lwt.cma"
 archive(native) = "session_cohttp_lwt.cmxa"
 archive(native, plugin) = "session_cohttp_lwt.cmxs"
 exists_if = "session_cohttp_lwt.cma"
)

package "cohttp-async" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "async cohttp.async result session.cohttp threads"
 archive(byte) = "session_cohttp_async.cma"
 archive(byte, plugin) = "session_cohttp_async.cma"
 archive(native) = "session_cohttp_async.cmxa"
 archive(native, plugin) = "session_cohttp_async.cmxs"
 exists_if = "session_cohttp_async.cma"
)

package "cohttp" (
 version = "0.1.0"
 description = "A session manager for your everyday needs"
 requires = "cohttp result session"
 archive(byte) = "session_cohttp.cma"
 archive(byte, plugin) = "session_cohttp.cma"
 archive(native) = "session_cohttp.cmxa"
 archive(native, plugin) = "session_cohttp.cmxs"
 exists_if = "session_cohttp.cma"
)
# OASIS_STOP

